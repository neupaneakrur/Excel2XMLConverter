name: CI/CD Pipeline

on:
  push:
    branches:
      - dev

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '7.0.x' 

      - name: Build application
        run: dotnet build --configuration Release

      - name: Publish application
        run: dotnet publish --configuration Release --output ./publish

      - name: Transfer files to EC2
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          source: './publish'
          target: '/home/ubuntu/app/github'
         
      - name: SSH into EC2 and run command
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.KEY }}
          port: ${{ secrets.PORT }}

          script: |
            sudo systemctl stop Converter.service &&
            sudo cp -rf /home/ubuntu/app/github/publish/* /var/www/converter &&
            sudo systemctl start Converter.service 
            
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Install AWS CLI
        run: |
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          sudo ./aws/install

      - name: Create AMI
        run: |
          instance_id=${{ secrets.INSTANCE_ID }}
          aws ec2 create-image --instance-id $instance_id --name "MyAMIFROMGithubActions" --description "AMI created from instance $instance_id"
          echo "::set-output name=ami_id::$ami_id"
      
      - name: Update Launch Template
        run: |
          launch_template_id=${{ secrets.LAUNCH_TEMPLATE_ID }}
          ami_id=${{ steps.create-ami.outputs.ami_id }}
          aws ec2 create-launch-template-version --launch-template-id $launch_template_id --source-version 1 --launch-template-data "{\"ImageId\":\"$ami_id\"}"

