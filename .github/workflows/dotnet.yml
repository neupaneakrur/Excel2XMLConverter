name: CI/CD Pipeline

on:
  push:
    branches:
      - dev

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '7.0.x' 

      - name: Build application
        run: dotnet build --configuration Release

      - name: Publish application
        run: dotnet publish --configuration Release --output ./publish

      - name: Transfer files to EC2
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          source: './publish'
          target: '/home/ubuntu/app/github'
         
      - name: SSH into EC2 and run command
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.KEY }}
          port: ${{ secrets.PORT }}

          script: |
            sudo systemctl stop Converter.service &&
            sudo cp -rf /home/ubuntu/app/github/publish/* /var/www/converter &&
            sudo systemctl start Converter.service 
            
      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2
          
      - name: Create new AMI
        run: |
          INSTANCE_ID=$(curl -s http://169.254.169.254/latest/meta-data/instance-id)
          NEW_AMI_ID=$(aws ec2 create-image --instance-id $INSTANCE_ID --name "Updated AMI" --output text)
          echo "::set-output name=ami-id::$NEW_AMI_ID"

